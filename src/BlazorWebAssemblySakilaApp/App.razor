@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader AssemblyLoader

<Fluxor.Blazor.Web.StoreInitializer />

<Router AppAssembly="@typeof(App).Assembly"
    AdditionalAssemblies="@_lazyLoadedAssemblies"
    OnNavigateAsync="@OnNavigateAsync"
>
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>

@code {

   private List<Assembly> _lazyLoadedAssemblies = new List<Assembly>();


   private async Task OnNavigateAsync(NavigationContext context)
   {
       if (context.Path=="dashboard")
       {
           var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "DashboardLibrary.wasm" });

           _lazyLoadedAssemblies.AddRange(assemblies);
       }
   }
    
    
}