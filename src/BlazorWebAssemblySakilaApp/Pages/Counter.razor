@page "/counter"
@using BlazorWebAssemblySakilaApp.Features.Counter
@using Fluxor
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@implements IDisposable
@inject IState<CounterState> CounterState
@inject IDispatcher dispatcher

<PageTitle>Counter</PageTitle>

<NavigationLock ConfirmExternalNavigation="true" OnBeforeInternalNavigation="BeforeInternalNavigation" />

<h1>Counter</h1>

<p role="status">Current count: @CounterState.Value.CurrentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {

    private bool changed =>  CounterState.Value.CurrentCount > 0;

    private IDisposable registration;


    private void IncrementCount()
    {
        dispatcher.Dispatch(new CounterIncrementAction());        
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            registration = NavigationManager.RegisterLocationChangingHandler(LocationChangingHandler);
        }
    }

    private ValueTask LocationChangingHandler(LocationChangingContext arg)
    {
        Console.WriteLine("Location is changing...");

        return ValueTask.CompletedTask;
    }

    private async Task BeforeInternalNavigation(LocationChangingContext context)
    {
        if (changed)
        {
            var proceed = await JS.InvokeAsync<bool>("window.confirm", "Are you sure you want to leave window?");

            if (!proceed)
                context.PreventNavigation();

        }
    }


    public void Dispose()
    {
        registration?.Dispose();
    }
}
