@page "/rentals/{id:int}"
@inject ApiRentalService Api
@inject IAuthorizationService AuthorizationService

<h3>View</h3>

@if (Rental is not null)
{
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">@Rental.RentalDate</h4>

            <p class="card-text">

                @if (CanReturn)
                {
                    <button class="btn btn-primary">Return</button>
                }
            </p>
        </div>
    </div>
}



@code {

    [Parameter]
    public int Id { get; set; }

    public Rental Rental { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private bool CanReturn;


    protected override async Task OnParametersSetAsync()
    {
        Rental = await Api.GetById(Id);

        var state = await authenticationState;

        var user = state.User;

        var result = await AuthorizationService.AuthorizeAsync(user, Rental, "ReturnPolicy");

        CanReturn = result.Succeeded;

    }

}
