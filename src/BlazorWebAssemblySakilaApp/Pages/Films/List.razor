@page "/films"
@using BlazorWebAssemblySakilaApp.Components
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@inject ApiFilmService Api
@inject NavigationManager NavigationManager


@attribute [Authorize(Roles = "store-2,store-3", Policy = "Adult")]


<h3>Films</h3>

<SearchBar OnSearch="Search" />


<Loading Items="@films">

    <GenericTable Items="@films">
        <HeaderTemplate>
            <th>Title</th>
            <th>Description</th>
            <th>Release Year</th>
            <th>Rating</th>
            <th>Actions</th>
        </HeaderTemplate>

        <RowTemplate Context="film">
            <td><a href="/films/@film.Id">@film.Title</a></td>
            <td>@film.Description</td>
            <td>@film.ReleaseYear</td>
            <td>@film.Rating</td>

            <td>
                <a href="/films/@film.Id" class="btn btn-primary">View</a>
                <a href="/films/edit/@film.Id" class="btn btn-primary">Edit</a>

                <button type="button" @onclick=@(()=>Update(film)) class="btn btn-secondary">Update</button>
            </td>
        </RowTemplate>
    </GenericTable>
</Loading>


@code {

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private List<Film> films;

    private async void Search(string searchText)
    {
        films = null;

        films = await Api.GetByFilter(searchText);

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        films = await Api.GetAllAsync();

        if (authenticationState is not null)
        {
            var state = await authenticationState;

            var user = state.User;

            var ratings = user.FindAll(c => c.Type == "rating").Select(c => c.Value);

            films = films.Where(f => ratings.Contains(f.Rating)).ToList();
        }

    }

    private async Task Update(Film film)
    {
        // TODO: update film


        NavigationManager.NavigateTo("/");
    }


}
